{"name":"mongo-express","body":"mongo-express\r\n=============\r\n\r\nWeb-based MongoDB admin interface written with Node.js and express\r\n\r\n[![Build Status](https://secure.travis-ci.org/andzdroid/mongo-express.png?branch=master)](http://travis-ci.org/andzdroid/mongo-express) - Master (stable) branch\r\n\r\n[![Build Status](https://secure.travis-ci.org/andzdroid/mongo-express.png?branch=develop)](http://travis-ci.org/andzdroid/mongo-express) - Develop branch\r\n\r\n\r\nFeatures\r\n--------\r\n\r\nCurrent features:\r\n\r\n* Connect to multiple databases\r\n* Connect and authenticate to individual databases\r\n* Authenticate as admin to view all databases\r\n* Database blacklist/whitelist\r\n* View/add/rename/delete collections\r\n* View/add/update/delete documents\r\n* Use BSON data types in documents\r\n\r\nPlanned features:\r\n\r\n* Support for replica set connections\r\n* Web-based command-line interface\r\n* Site authentication\r\n* REST interface\r\n\r\n\r\nLimitations\r\n-----------\r\n\r\n* Documents must have document._id property to be edited\r\n* No GridFS support (might become a planned feature)\r\n* Binary BSON data type not tested\r\n\r\nRecommend only using mongo-express for development purposes as an ad-hoc MongoDB viewer.\r\n\r\n\r\nScreenshots\r\n-----------\r\n\r\n<img src=\"http://i.imgur.com/DOi3b.png\" title=\"Viewing documents in a collection\" />\r\n\r\nClick here for more screenshots: \r\n[http://imgur.com/a/OTZHe](http://imgur.com/a/OTZHe)\r\n\r\nThese screenshots are from version 0.11.0.\r\n\r\n\r\nUsage\r\n-----\r\n\r\n**To install:**\r\n\r\n    npm install mongo-express\r\n\r\nOr if you want to install a global copy:\r\n\r\n    npm install -g mongo-express\r\n\r\n**To configure:**\r\n\r\nCopy `config.default.js` into a new file called `config.js`.\r\n\r\nFill in your MongoDB connection details, and any other options you want to change.\r\n\r\n**To run:**\r\n\r\n    node app\r\n\r\n**To use:**\r\n\r\nVisit `http://localhost:8081` or whatever URL/port you entered into your config.\r\n\r\n\r\nBSON Data Types\r\n---------------\r\n\r\nThe following BSON data types are supported in the mongo-express document editor/viewer.\r\n\r\n**Native Javascript Types**\r\n\r\nStrings, numbers, lists, booleans, null, etc.\r\n\r\nAll numbers in Javascript are 64-bit floating points.\r\n\r\n**ObjectID/ObjectId**\r\n\r\n    ObjectID()\r\n\r\nCreates a new Object ID type.\r\n\r\n    ObjectID(id)\r\n\r\nUse Object ID with the given 24-digit hexadecimal string.\r\n\r\n**ISODate**\r\n\r\n    ISODate()\r\n\r\nCreates a new ISODate object with current time.\r\n\r\n`new Date()` can also be used (note the `new` keyword there).\r\n\r\n    ISODate(timestamp)\r\n\r\nUses ISODate object with the given timestamp.\r\n\r\n**DBRef/Dbref**\r\n\r\n    DBRef(collection, objectID)\r\n\r\n    DBRef(collection, objectID, database)\r\n\r\nObject ID is the ID string, not the ObjectID type.\r\n\r\nThe database value is optional.\r\n\r\n**Timestamp**\r\n\r\n    Timestamp()\r\n\r\nCreates a new Timestamp object with a value of 0.\r\n\r\n    Timestamp(time, ordinal)\r\n\r\nExample: `Timestamp(ISODate(), 0)`.\r\n\r\nSee [http://www.mongodb.org/display/DOCS/Timestamp+data+type](http://www.mongodb.org/display/DOCS/Timestamp+data+type) for more info about the Timestamp data type.\r\n\r\n**Code**\r\n\r\n    Code(code)\r\n\r\nCode can be a native Javascript function, or it can be a string.\r\n\r\nSpecifying a scope/context is not supported.\r\n\r\n**MinKey**\r\n\r\n    MinKey()\r\n\r\n**MaxKey**\r\n\r\n    MaxKey()\r\n\r\n**Symbol**\r\n\r\n    Symbol(string)\r\n\r\n---\r\n\r\nNot tested:\r\n\r\n* Binary/BinData\r\n\r\nHere is an example of a document which can be read/edited in mongo-express:\r\n\r\n    {\r\n      \"_id\": ObjectID(), // or ObjectId()\r\n      \"dates\": {\r\n        \"date\": ISODate(\"2012-05-14T16:20:09.314Z\"),\r\n        \"new_date\": ISODate(),\r\n        \"alternative\": new Date()\r\n      },\r\n      \"bool\": true,\r\n      \"string\": \"hello world!\",\r\n      \"list of numbers\": [\r\n        123,\r\n        111e+87,\r\n        4.4,\r\n        -12345.765\r\n      ],\r\n      \"reference\": DBRef(\"collection\", \"4fb1299686a989240b000001\"),\r\n      \"ts\": Timestamp(ISODate(), 1),\r\n      \"minkey\": MinKey(),\r\n      \"maxkey\": MaxKey(),\r\n      \"func\": Code(function() { alert('Hello World!') }),\r\n      \"symbol\": Symbol(\"test\")\r\n    }\r\n\r\nLicense\r\n-------\r\nMIT License\r\n\r\nCopyright (c) 2012 Chun-hao Hu\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n","tagline":"Web-based MongoDB admin interface, written with Node.js and express","google":"UA-596992-21","note":"Don't delete this file! It's used internally to help with page regeneration."}